{"version":3,"file":"static/js/665.c19f6432.chunk.js","mappings":"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","sources":["../node_modules/@mui/base/utils/appendOwnerState.js","../node_modules/@mui/base/utils/extractEventHandlers.js","../node_modules/@mui/base/utils/isHostComponent.js","../node_modules/@mui/base/utils/omitEventHandlers.js","../node_modules/@mui/base/utils/mergeSlotProps.js","../node_modules/@mui/base/utils/resolveComponentProps.js","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/utils/useSlot.js","../node_modules/@mui/material/Avatar/Avatar.js","../node_modules/@mui/material/zero-styled/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { isHostComponent } from './isHostComponent';\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nexport function appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return _extends({}, otherProps, {\n    ownerState: _extends({}, otherProps.ownerState, ownerState)\n  });\n}","/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nexport function extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nexport function isHostComponent(element) {\n  return typeof element === 'string';\n}","/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nexport function omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport clsx from 'clsx';\nimport { extractEventHandlers } from './extractEventHandlers';\nimport { omitEventHandlers } from './omitEventHandlers';\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nexport function mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n    const mergedStyle = _extends({}, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n    const props = _extends({}, additionalProps, externalForwardedProps, externalSlotProps);\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n  const mergedStyle = _extends({}, internalSlotProps == null ? void 0 : internalSlotProps.style, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n  const props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers);\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}","/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nexport function resolveComponentProps(componentProps, ownerState, slotState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState, slotState);\n  }\n  return componentProps;\n}","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"getSlotOwnerState\", \"internalForwardedProps\"],\n  _excluded2 = [\"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"component\"];\nimport useForkRef from '@mui/utils/useForkRef';\nimport { appendOwnerState, resolveComponentProps, mergeSlotProps } from '@mui/base/utils';\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nexport default function useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n      className,\n      elementType: initialElementType,\n      ownerState,\n      externalForwardedProps,\n      getSlotOwnerState,\n      internalForwardedProps\n    } = parameters,\n    useSlotPropsParams = _objectWithoutPropertiesLoose(parameters, _excluded);\n  const {\n      component: rootComponent,\n      slots = {\n        [name]: undefined\n      },\n      slotProps = {\n        [name]: undefined\n      }\n    } = externalForwardedProps,\n    other = _objectWithoutPropertiesLoose(externalForwardedProps, _excluded2);\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n  const _mergeSlotProps = mergeSlotProps(_extends({\n      className\n    }, useSlotPropsParams, {\n      externalForwardedProps: name === 'root' ? other : undefined,\n      externalSlotProps: resolvedComponentsProps\n    })),\n    {\n      props: {\n        component: slotComponent\n      },\n      internalRef\n    } = _mergeSlotProps,\n    mergedProps = _objectWithoutPropertiesLoose(_mergeSlotProps.props, _excluded3);\n  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\n  const finalOwnerState = _extends({}, ownerState, slotOwnerState);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = appendOwnerState(elementType, _extends({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps, name !== 'root' && !slots[name] && internalForwardedProps, mergedProps, LeafComponent && {\n    as: LeafComponent\n  }, {\n    ref\n  }), finalOwnerState);\n  Object.keys(slotOwnerState).forEach(propName => {\n    delete props[propName];\n  });\n  return [elementType, props];\n}","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, createUseThemeProps } from '../zero-styled';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport useSlot from '../utils/useSlot';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useThemeProps = createUseThemeProps('MuiAvatar');\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: _extends({\n      color: (theme.vars || theme).palette.background.default\n    }, theme.vars ? {\n      backgroundColor: theme.vars.palette.Avatar.defaultBg\n    } : _extends({\n      backgroundColor: theme.palette.grey[400]\n    }, theme.applyStyles('dark', {\n      backgroundColor: theme.palette.grey[600]\n    })))\n  }]\n}));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n      alt,\n      children: childrenProp,\n      className,\n      component = 'div',\n      slots = {},\n      slotProps = {},\n      imgProps,\n      sizes,\n      src,\n      srcSet,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: _extends({}, imgProps, slotProps.img)\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, _extends({}, imgSlotProps));\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   * @deprecated Use `slotProps.img` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","import useThemeProps from '../styles/useThemeProps';\nexport { default as styled } from '../styles/styled';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function createUseThemeProps(name) {\n  return useThemeProps;\n}"],"names":["appendOwnerState","elementType","otherProps","ownerState","undefined","isHostComponent","_extends","extractEventHandlers","object","excludeKeys","result","Object","keys","filter","prop","match","includes","forEach","element","omitEventHandlers","mergeSlotProps","parameters","getSlotProps","additionalProps","externalSlotProps","externalForwardedProps","className","joinedClasses","clsx","mergedStyle","style","props","length","internalRef","eventHandlers","componentsPropsWithoutEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","ref","resolveComponentProps","componentProps","slotState","createSvgIcon","_jsx","d","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_excluded2","_excluded3","useThemeProps","AvatarRoot","styled","name","overridesResolver","styles","root","variant","colorDefault","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","variants","vars","shape","color","palette","background","default","backgroundColor","Avatar","defaultBg","grey","applyStyles","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","React","inProps","alt","childrenProp","children","component","slots","slotProps","imgProps","sizes","src","srcSet","other","_objectWithoutPropertiesLoose","loaded","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","composeClasses","useUtilityClasses","initialElementType","getSlotOwnerState","internalForwardedProps","useSlotPropsParams","rootComponent","resolvedComponentsProps","_mergeSlotProps","slotComponent","mergedProps","useForkRef","slotOwnerState","finalOwnerState","LeafComponent","as","propName","useSlot","ImgSlot","imgSlotProps"],"sourceRoot":""}